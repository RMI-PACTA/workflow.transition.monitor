on:
  workflow_call:
    inputs:
      image-name:
        required: true
        type: string
      image-tag:
        required: true
        type: string
    outputs:
      full-image-name:
        description: "Full pushed image name including host/registry, name, and tag"
        value: ${{ jobs.docker-build.outputs.full-image-name }}
jobs:
  docker-build:
    environment: Build
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write
    timeout-minutes: 25
    outputs:
      full-image-name: ${{ steps.push-image.outputs.full-image-name }}

    steps:
      - name: Checkout workflow.transition.monitor
        uses: actions/checkout@v3
        with:
          path: workflow.transition.monitor

      # https://github.com/Azure/login?tab=readme-ov-file#login-with-openid-connect-oidc-recommended
      - name: Azure Login
        uses: azure/login@v1
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      # https://github.com/marketplace/actions/azure-cli-action#workflow-to-execute-an-azure-cli-script-of-a-specific-cli-version
      - name: Azure CLI script
        uses: azure/CLI@v1
        with:
          # azcliversion: 2.30.0
          inlineScript: |
            az version
            az account show
            az storage -h

      # - name: Make fake (empty) pacta-data folder
      #   run: mkdir pacta-data

      # - name: Make fake (empty) templates.transition.monitor folder
      #   run: mkdir templates.transition.monitor

      # - name: Build Docker image
      #   run: |
      #     cp workflow.transition.monitor/Dockerfile Dockerfile
      #     docker build . --file Dockerfile --tag ${{ inputs.image-name }}

      # - name: Log in to registry
      #   run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u $ --password-stdin

      # - name: Push image
      #   id: push-image
      #   run: |
      #     full_image_name="ghcr.io/${{ github.repository_owner }}/${{ inputs.image-name }}:${{ inputs.image-tag }}"
      #     full_image_name=$(echo $full_image_name | tr '[A-Z]' '[a-z]')
      #     docker tag ${{ inputs.image-name }} $full_image_name
      #     docker push $full_image_name
      #     echo "full-image-name=$full_image_name" >> $GITHUB_OUTPUT
