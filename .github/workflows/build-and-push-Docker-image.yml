on:
  workflow_call:
    inputs:
      image-name:
        required: true
        type: string
      image-tag:
        required: true
        type: string
    outputs:
      full-image-name:
        description: "Full pushed image name including host/registry, name, and tag"
        value: ${{ jobs.docker-build.outputs.full-image-name }}
jobs:
  docker-build:
    runs-on: ubuntu-latest
    permissions:
      packages: write
      contents: read
    timeout-minutes: 25
    outputs:
      full-image-name: ${{ steps.push-image.outputs.full-image-name }}

    steps:
      - name: Checkout workflow.transition.monitor
        uses: actions/checkout@v4
        with:
          path: workflow.transition.monitor

      - name: Make fake (empty) pacta-data folder
        run: mkdir pacta-data

      - name: Make fake (empty) templates.transition.monitor folder
        run: mkdir templates.transition.monitor

      - name: Build Docker image
        run: |
          cp workflow.transition.monitor/Dockerfile Dockerfile
          docker build . --file Dockerfile --tag ${{ inputs.image-name }}

      - name: Log in to registry
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u $ --password-stdin

      - name: Push image
        id: push-image
        run: |
          full_image_name="ghcr.io/${{ github.repository_owner }}/${{ inputs.image-name }}:${{ inputs.image-tag }}"
          full_image_name=$(echo $full_image_name | tr '[A-Z]' '[a-z]')
          docker tag ${{ inputs.image-name }} $full_image_name
          docker push $full_image_name
          echo "full-image-name=$full_image_name" >> $GITHUB_OUTPUT

      - name: Export Outputs
        id: export-outputs
        run: |
          mkdir -p /tmp/comment-json
          json_filename=$( \
            echo "comment-json-merge-${{ inputs.image-name }}-build-push.json | \
            tr '/' '-' \
            )
          echo "json-filename=$json_filename"
          echo "json-filename=$json_filename" >> "$GITHUB_ENV"
          json_file="/tmp/comment-json/$json_filename"
          echo "json-file=$json_file"
          jq -n '{
            "commit_time": "${{ github.event.pull_request.updated_at }}",
            "git_sha": "${{ github.event.pull_request.head.sha }}",
            "image": "${{ steps.push-image.outputs.full-image-name }}"
          }' >> $json_file

      - name: Upload comment JSON
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.json-filename }}
          path: /tmp/comment-json/*
          if-no-files-found: error
          retention-days: 1
